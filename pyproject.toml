[project]
name = "pinsight"
version = "0.1.0"
description = "A CLI for summarizing a pins board using the Posit pins framework."
readme = "README.md"
authors = [
    { name = "Nathan McDougall", email = "nathan.j.mcdougall@gmail.com" },
]
requires-python = ">=3.13"
dependencies = []
classifiers = ["Development Status :: 1 - Planning"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
link-mode = "symlink"
default-groups = ["doc", "dev", "test"]

[tool.ruff]
line-length = 88
lint.select = ["A", "C4", "E4", "E7", "E9", "F", "FLY", "FURB", "I", "PLE", "PLR", "RUF", "SIM", "UP", "PT"]
lint.ignore = ["PLR2004", "SIM108"]
format.docstring-code-format = true

[tool.pyproject-fmt]
keep_full_version = true

[tool.codespell]
ignore-regex = ["[A-Za-z0-9+/]{100,}"]
ignore-words-list = ["..."]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = ["--import-mode=importlib", "-ra", "--strict-markers", "--strict-config"]
filterwarnings = ["error"]
xfail_strict = true
log_cli_level = "INFO"
minversion = "7"

[tool.coverage]
report.exclude_also = ["if TYPE_CHECKING:", "raise AssertionError", "raise NotImplementedError", "assert_never(.*)", "class .*\\bProtocol\\):", "@(abc\\.)?abstractmethod"]
report.omit = ["*/pytest-of-*/*"]

[tool.coverage.run]
source = ["src"]
[dependency-groups]
doc = [
    "mkdocs>=1.6.1",
]
dev = [
    "codespell>=2.4.1",
    "deptry>=0.23.0",
    "pyproject-fmt>=2.6.0",
    "ruff>=0.12.5",
]
test = [
    "coverage[toml]>=7.10.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
]
